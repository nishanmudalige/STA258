2*3
x = seq(1, 10, by = 1)
y = x
plot(x, y, col = "lightcoral", pch = 16)
plot(x, y, col = "lightcoral", pch = 1)
plot(x, y, col = "lightcoral", pch = 1000)
plot(x, y, col = "lightcoral", pch = 10)
plot(x, y, col = "lightcoral", pch = 16)
plot(x, y, col = "blue", pch = 16)
y = x + 1
y = seq(1, 10, by = 2)
plot(x, col = "blue", pch = 16)
x = seq(1, 10, by = 1)
y = x
plot(x, y)
plot(x, y, col = "blue")
plot(x, y, col = "blue", pch = 16)
help("pchisq")
help("pch")
plot(x, y, col = "blue", pch = 2)
plot(x, y, col = "blue", pch = 16)
colorConverter()
write.csv(x = cbind(x, y), file = "~/Desktop/something2.csv")
a = 19
a <- 19
my_df = read.csv("something2.csv")
x = seq(1, 10, by = 1)
y = x
y = x
x = seq(1, 10, by = 1)
ggplot(data = faithful, mapping = aes(x = eruptions)) +
geom_histogram(color = "black", fill = "blue", binwidth = 0.5) +
labs(title = "Duration of Old Faithful Eruption (min)", x = "Duration", y = "Frequency") +
theme_bw()
install.packages("ggplot2")
library(ggplot2)
()
theme_bw()
theme_bw()
theme_bw()
hist(faithful$eruptions,
xlab = "duration", ylab = "count",
main = "DUration of Old Faithful Eruption(min)",
col = "blue", freq = 0.1)
labs(title = "Duration of Old Faithful Eruption (min)", x = "Duration", y = "Frequency")
ggplot(data = faithful, mapping = aes(x = eruptions)) +
geom_histogram(color = "black", fill = "blue", binwidth = 0.5) +
labs(title = "Duration of Old Faithful Eruption (min)", x = "Duration", y = "Frequency")
ggplot(data = faithful, mapping = aes(x = eruptions)) +
geom_histogram(color = "black", fill = "blue", binwidth = 0.5) +
labs(title = "Duration of Old Faithful Eruption (min)", x = "Duration", y = "Frequency") +
theme_bw()
help(theme_bw())
help("theme_bw()")
income = c(4, 25, 30, 30, 30, 32, 32, 35, 50, 50, 50, 55, 60, 74, 110)
summery(income)
summary(income)
boxplot(faithful$eruptions,
main = ""
col = "blue")
boxplot(faithful$eruptions,
main = "",
col = "blue");
boxplot(faithful$eruptions,
main = "eruption duration",
col = "blue");
hist(faithful$eruptions)
boxplot(faithful$eruptions,
main = "eruption duration",
col = "blue");
prototype = rnorm(1000)
hist(prototype)
100*length(prototype[ lower<prototype & prototype<upper])/N;
meanP<-mean(prototype);
sdP<-sqrt(var(prototype));
lower<-meanP-sdP;
upper<-meanP+sdP;
N<-length(prototype);
100*length(prototype[ lower<prototype & prototype<upper])/N;
# attach the data file
attach(tobinQ)
load("~/.RData")
library(readr)
tobinQ <- read_csv("Desktop/tobinQ.csv")
View(tobinQ)
attach(tobinQ)
summary(USA)
sd(USA)
sd(USA)
sd(USA)
attach(tobinQ)
summary(USA)
sd(USA)
hist(tobinQ)
hist(USA)
hist(USA, main = "Histogram of Tobins in Q, Corporate Financial Measure")
hist(USA, main = "Histogram of Tobin's Q, Corporate Financial Measure",
xlab = "Tobin's Q", ylab = "counts")
boxplot(USA)
hist(USA, main = "Histogram of Tobin's Q, Corporate Financial Measure",
xlab = "Tobin's Q", ylab = "counts")
hist(USA, main = "Histogram of Tobin's Q, Corporate Financial Measure",
xlab = "Tobin's Q", ylab = "counts", col = adjustcolor(rainbow(6)))
hist(USA, main = "Histogram of Tobin's Q, Corporate Financial Measure",
xlab = "Tobin's Q", ylab = "counts")
boxplot(USA, ylab = "Tobin's Q")
boxplot(USA, main = "Histogram of Tobin's Q, Corporate Financial Measure", ylab = "Tobin's Q")
boxplot(USA, main = "Boxplot of Tobin's Q, Corporate Financial Measure", ylab = "Tobin's Q")
qqplot(USA)
qqmorm(USA)
qqmorm(USA, main="Tobin's Q, Corprate Financial Measure")
qqnorm(USA, main="Tobin's Q, Corprate Financial Measure")
qqline(USA)
attach(tobinQ)
summary(USA)
sd(USA)
par(mfrow =c(2,2))
hist(USA, main = "Histogram of Tobin's Q, Corporate Financial Measure",
xlab = "Tobin's Q", ylab = "counts")
boxplot(USA, main = "Boxplot of Tobin's Q, Corporate Financial Measure", ylab = "Tobin's Q")
qqnorm(USA, main="Tobin's Q, Corprate Financial Measure")
qqline(USA)
help("par")
library(readr)
density <- read_csv("Desktop/density.csv")
View(density)
attach(density)
summary(earth)
sd(earth)
hist(earth)
hist(earth, mian = "Histogram of Earth's Density")
hist(earth, mian = "Histogram of Earth's Density")
hist(earth, mian = "Histogram of Earth's Density",
xlab = "Earth's Density")
attach(density)
summary(earth)
sd(earth)
par(mfrow = c(2,2))
hist(earth, mian = "Histogram of Earth's Density",
xlab = "Earth's Density")
attach(density)
summary(earth)
sd(earth)
par(mfrow = c(2,2))
hist(earth, mian = "Histogram of Earth's Density",
xlab = "Earth's Density")
hist(earth, mian = "Histogram of Earth's Density",
xlab = "Earth's Density",
ylab = "counts")
hist(earth, mian = "Histogram of Earth's Density",
xlab = "Earth's Density",
ylab = "counts")
attach(density)
attach(density)
library(readr)
density <- read_csv("Desktop/density.csv")
View(density)
attach(density)
attach(density)
attach(density)
# attach the data file
attach(density)
library(readr)
density <- read_csv("Desktop/density.csv")
View(density)
attach(density)
library(readr)
density <- read_csv("Desktop/density.csv")
View(density)
attach(density)
summary(density)
summary(density)
summary(earth)
sd(earth)
hist(earth, main = "Earth's Dencity")
hist(earth, main = "Histogram of Earth's Dencity")
hist(earth, main = "Histogram of Earth's Dencity",
xlab = "Earth'sdencity", ylab = "counts")
hist(earth, main = "Histogram of Earth's Dencity",
xlab = "Earth's dencity", ylab = "counts")
hist(earth, main = "Histogram of Earth's Dencity",
xlab = "Earth's dencity", ylab = "count")
plot(density(earth), main = "dencity Plot of Earth's Dencity")
plot(density(earth), main = "Dencity Plot of Earth's Dencity")
boxplot(earth)
boxplot(earth, main = "Boxplot of Earth's Dencity",
ylab = "Earth's dencity")
boxplot(earth, main = "Boxplot of Earth's Dencity",+
ylab = "Earth's dencity")
boxplot(earth, main = "Boxplot of Earth's Dencity",
ylab = "Earth's dencity")
boxplot(earth, main = "Boxplot of Earth's Dencity",
ylab = "Earth's dencity")
qqnorm(earth, main = "earth's Dencity")
qqline(earth)
par(mfrow = c(2,2))
par(mfrow = c(2,2))
par(mfrow = c(2,2))
hist(earth, main = "Histogram of Earth's Dencity",
xlab = "Earth's dencity", ylab = "count")
plot(density(earth), main = "Dencity Plot of Earth's Dencity")
boxplot(earth, main = "Boxplot of Earth's Dencity",
ylab = "Earth's dencity")
qqnorm(earth, main = "earth's Dencity")
qqline(earth)
library(readr)
EduAttain_1_ <- read_csv("Downloads/EduAttain (1).csv")
View(EduAttain_1_)
attach(EduAttain_1_)
attach(EduAttain_1_)
names(EduAttain_1_)
sort(EduAttain_1_)
sort(Edu)
sort(EduAttain_1_)
sort(Educational_Attainment)
min(Educational_Attainment)
max(Educational_Attainment)
hist(Educational_Attainment, col = "darkslategray3")
mean(Educational_Attainment)
median(Educational_Attainment)
table(Educational_Attainment)
range(Educational_Attainment)
# Calculate range of Educational_Attainment
min.cal = min(Educational_Attainment)
max.cal = max(Educational_Attainment)
range.cal
range.cal
min.cal = min(Educational_Attainment)
max.cal = max(Educational_Attainment)
range.cal = max.cal - min.cal
range.cal
var(Educational_Attainment)
sd(Educational_Attainment)
boxplot(Educational_Attainment, main = "Boxplot of Percent Educatonal Attainment",
ylab = "percentages", col = "powderblue")
summary(Educational_Attainment)
boxplot(Educational_Attainment, main = "Boxplot of Percent Educatonal Attainment",
ylab = "percentages", col = "powderblue", horizontal = TRUE)
abline(v=61.25, col="red")
abline(v=45.5, col="red")
qqnorm(Educational_Attainment, main = "Normal QQ Plot of Educational Attainment")
qqline(Educational_Attainment)
library(mosaic)
favstats(Educational_Attainment)
shipsanitation <- read.csv("~/Desktop/shipsanitation.txt", sep="")
View(shipsanitation)
hist(shipsanitation)
attach(shipsanitation)
hist(shipsanitation)
summary(shipsanitation)
hist(SCORE)
summary(EduAttain_1_)
summary(68, 70, 71, 71, 71, 72, 73, 73, 73, 73, 74,
74, 74, 74, 74, 75, 75, 75, 76, 77, 82)
hist(faithful$waiting)
hist(faithful$waiting,plot=FALSE)$breaks
url="https://mcs.utm.utoronto.ca/~nosedal/data/rating.txt"
ratings_data= read.table(url,header=TRUE)
names(ratings_data)
ratings_data[1:6, ]
all.programs=ratings_data$TV.Program
all.programs[1:6]
big.bang=all.programs[all.programs==2]
big.bang[1:6]
sample.size=length(all.programs)
sample.size
successes=length(big.bang)
successes
prop.test(successes,sample.size,conf.level=0.95,
correct=FALSE)
install.packages("bookdown", dependencies = T)
install.packages("knitr", dependencies = T)
install.packages("tikzDevice", dependencies = T)
install.packages("tinytex")
tinytex::install_tinytex()
bookdown::render_book()
bookdown::render_book()
bookdown::render_book()
bookdown::render_book()
install.packages("knitr", dependencies = T)
install.packages("tikzDevice", dependencies = T)
install.packages("tinytex")
tinytex::install_tinytex()
tinytex::install_tinytex()
bookdown::render_book()
bookdown::render_book("index.Rmd")
getwd()
list.files()
list.files()
bookdown::render_book()
bookdown::redner_book()
bookdown::render_book()
bookdown::render_book()
getwd()
setwd("/Users/suxi/Desktop/STA258")
bookdown::render_book()
bookdown::render_book()
bookdown::render_book()
bookdown::render_book()
bookdown::render_book()
bookdown::render_book()
bookdown::render_book()
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
browseURL("_book/index.html")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book()
bookdown::render_book()
bookdown::render_book()
bookdown::render_book()
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book()
bookdown::render_book("index.Rmd", "bookdown::gitbook")
1912 -1886
bookdown::render_book()
bookdown::render_book()
browseURL("_book/index.html")
bookdown::redner_book()
bookdown::render_book()
browseURL("_book/index.html")
bookdown::render_book()
browseURL("_book/index.html")
bookdown::render_book()
bookdown::render_book()
browseURL("_book/index.html")
bookdown::render_book()
browseURL("_book/index.html")
bookdown::render_book()
bookdown::render_book()
browseURL("_book/index.html")
bookdown::render_book()
bookdown::render_book()
bookdown::render_book()
browseURL("_book/index.html")
bookdown::render_book()
browseURL("_book/index.html")
bookdown::render_book()
browseURL("_book/index.html")
bookdown::render_book()
browseURL("_book/index.html")
bookdown::render_book()
browseURL("_book/index.html")
bookdown::render_book()
browseURL("_book/index.html")
bookdown::render_book()
browseURL("_book.index.html")
browseURL("_book/index.html")
bookdown::render_book()
bookdown::render_book()
bookdown::render_book()
bookdown::render_book()
bookdown::render_book()
unlink("_main.Rmd")
bookdown::render_book()
bookdown::render_book()
bookdown::render_book()
bookdown::render_book()
unlink("_main.Rmd")
bookdown::render_book()
bookdown::render_book()
bookdown::render_book()
bookdown::render_book()
bookdown::render_book()
bookdown::render_book()
bookdown::render_book()
bookdown::render_book()
bookdown::render_book()
bookdown::render_book()
bookdown::render_book()
bookdown::render_book()
unlink("_main.Rmd")
bookdown::render_book()
bookdown::render_book()
bookdown::render_book()
bookdown::render_book()
bookdown::render_book()
bookdown::render_book()
bookdown::render_book()
bookdown::render_book()
bookdown::render_book()
bookdown::render_book()
bookdown::render_book()
bookdown::render_book()
bookdown::render_book()
bookdown::render_book()
unlink("_main.Rmd")
bookdown::render_book()
bookdown::render_book()
bookdown::render_book()
unlink("_main.Rmd")
bookdown::render_book()
bookdown::render_book()
unlink("_main.Rmd")
bookdown::render_book()
bookdown::render_book()
bookdown::render_book()
unlink("_main.Rmd")
bookdown::render_book()
bookdown::render_book()
unlink("_main_Rmd")
bookdown::render_book()
unlink("_main.Rmd")
bookdown::render_book("index.Rmd")
bookdown::render_book()
bookdown::render_book()
unlink("_main.Rmd")
bookdown::render_book("index.Rmd")
bookdown::render_book()
browseURL("_book/index.html")
bookdown::render_book()
bookdown::render_book()
bookdown::render_book()
bookdown::render_book()
bookdown::render_book()
unlink("_main.Rmd")
bookdown::render_book()
bookdown::render_book()
bookdown::render_book()
bookdown::render_book()
bookdown::render_book()
bookdown::render_book()
bookdown::render_book()
bookdown::render_book()
bookdown::render_book()
unlink("_main.inex")
bookdown::render_book()
unlink("_main.Rmd")
bookdown::render_book("index.Rmd")
browseURL("docs/index.html")
browseURL("docs/index.html")
browseURL("_book/index.html")
bookdown::render_book()
bookdown::render_book()
browseURL("_book/index.html")
